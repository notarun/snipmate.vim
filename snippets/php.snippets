snippet php
	<?php

	${1}
snippet req
	require '${1:/path/file.php}';${2}
snippet arr
	[
		'${1:key}' => ${2:value},
	];
snippet p
	<?php ${1} ?>
snippet u
	use ${1:App\Foo\Bar};${2}
snippet ns
	namespace ${1:App\Foo\Bar};${2}
snippet $
	$${1:variable} = ${2:value};${3}
snippet fun
	function ${1:doStuff}(${2:DataType }${3:$arg}): ${4:ReturnType} {
		${5:// do stuff}
	}
snippet f
	function (${1:DataType }${2:$arg}): ${3:ReturnType} {
		${4:// do stuff}
	}
snippet fn
	fn (${1:DataType }${2:$arg}) => ${3:// magic};
snippet c
	class ${1:ClassName}${2: extends AnotherClass}${3: implements AnotherInterface}
	{
		${4: // start here}
	}
snippet con
	public function __construct(${1:DataType }${2:$arg})
	{
		${3:// do stuff}
	}
snippet m
	${1:public} function ${2:methodName}(${3:DataType }${4:$arg}): ${5:ReturnType}
	{
		${6:// do stuff}
	}
snippet if
	if (${1:$something} ${2:===} ${3:'something'}) {
		${4:// then do this}
	}
snippet fore
	foreach ($${1:things} as ${2:key => }$${3:needle}) {
		${5:// code...}
	}
snippet wh
	while (${1:condition}) {
		${2:// code...}
	}
snippet try
	try {
		${3:// code...}
	} catch (${1:Exception} $e) {
		${2:// throw Something};
	}
snippet t
	(${1:condition}) ? ${2:true} : ${3:false};${4}
snippet docm
	/**
	 * ${1:Method Doc}
	 *
	 * @param ${2:Param}
	 * @return ${2:ReturnType}
	 */
# laravel specific
snippet d
	dd($${1:something});${2}
